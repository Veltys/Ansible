# Title         : apache.yml
# Description   : Configure Apache
# Author        : Veltys
# Date          : 2024-08-04
# Version       : 1.1.2
# Usage         : (included as a tasks file by those tasks files which need it)
# Notes         : It is not necessary to be super user for it to work correctly, but it is necessary to become it (become, do you get it?)


---
- name: 'Enable required modules'
  tags:
    - configuration
    - apache
  community.general.apache2_module:
    name: "{{ item }}"
    state: 'present'
  loop: "{{ host.apache.modules }}"
  when: not ansible_check_mode

- name: 'Copy required templates'
  tags:
    - configuration
    - apache
  ansible.builtin.template:
    src: 'apache/000-site.conf.j2'
    dest: "/etc/apache2/sites-available/{{ '%03d' | format(i + 1) }}-{{ item.site }}.conf"
    mode: '666'
  loop: "{{ host.apache.sites }}"
  loop_control:
    index_var: i
    label: "{{ '%03d' | format(i + 1) }}-{{ item.site }}.conf"

- name: 'Remove default site link'
  tags:
    - configuration
    - apache
  ignore_errors: True
  ansible.builtin.file:
    path: '/etc/apache2/sites-enabled/000-default.conf'
    state: absent

- name: 'Enable configured sites'
  tags:
    - configuration
    - apache
  ansible.builtin.file:
    dest: "/etc/apache2/sites-enabled/{{ '%03d' | format(i + 1) }}-{{ item.site }}.conf"
    src: "../sites-available/{{ '%03d' | format(i + 1) }}-{{ item.site }}.conf"
    state: 'link'
  loop: "{{ host.apache.sites }}"
  loop_control:
    index_var: i
    label: "{{ '%03d' | format(i + 1) }}-{{ item.site }}"
  when: not ansible_check_mode

- name: 'Creating configured sites directories'
  tags:
    - configuration
    - apache
  ansible.builtin.file:
    path: "/var/www/vhosts/{{ item.site }}/httpdocs"
    state: 'directory'
  loop: "{{ host.apache.sites }}"
  loop_control:
    label: "/var/www/vhosts/{{ item.site }}/httpdocs"

- name: 'Setting configured sites passwords'
  tags:
    - configuration
    - apache
  ansible.builtin.include_tasks: apache_loop.yml
  loop: "{{ host.apache.credentials }}"
  loop_control:
    index_var: i
    label: "{{ host.apache.sites[i].site }}"
    loop_var: outer_item
  when:
    not ansible_check_mode and
    host.apache.sites[i].auth

- name: 'Certbot configurer'
  tags:
    - configuration
    - certbot
  ansible.builtin.include_tasks: certbot.yml
  when: "'certbot' in python_packages_to_install"

- name: 'Testing new configuration'
  tags:
    - configuration
    - apache
  ignore_errors: True
  ansible.builtin.command:
    cmd: 'apachectl configtest'
  register: test_status

- name: 'Restarting Apache 2 service'
  tags:
    - configuration
    - apache
  ansible.builtin.systemd_service:
    name: 'apache2'
    state: 'restarted'
  when:
    not ansible_check_mode and
    not test_status.failed
